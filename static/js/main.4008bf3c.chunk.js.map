{"version":3,"sources":["apollo/auth/index.js","apollo/defaultStates/index.js","apollo/resolvers/index.js","components/GuestHeader/GuestHeaderLogo/index.js","components/GuestHeader/Navigation/index.js","components/GuestHeader/index.js","layouts/AuthenticationLayout/index.js","routes/Authentication/SignIn/SignInForm/index.js","routes/Authentication/SignIn/index.js","graphql/mutations/createUser.js","graphql/mutations/sendAccountConfirmationEmail.js","routes/Authentication/Register/RegisterForm/RegisterFormAgreement/index.js","routes/Authentication/Register/RegisterForm/index.js","routes/Authentication/Register/RegisterMarketing/index.js","routes/Authentication/Register/index.js","routes/Authentication/CreateAccountSuccess/index.js","layouts/GuestLayout/index.js","routes/Blog/index.js","routes/Landing/LandingAnimatedCloud/index.js","routes/Landing/index.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["httpLink","createHttpLink","uri","process","link","ApolloLink","operation","forward","setContext","headers","authorization","localStorage","getItem","concat","defaultStates","currentUser","__typename","authSuccess","role","token","resolvers","Mutation","updateCurrentUser","_","_ref","_ref2","data","cache","writeQuery","GuestHeaderLogo","textLogoHidden","react_default","a","createElement","className","Link","to","src","alt","defaultProps","Navigation","menu","es_menu","theme","mode","selectedKeys","style","lineHeight","map","item","key","Item","toString","url","name","HeaderGuest","layout","Header","GuestHeader_GuestHeaderLogo","GuestHeader_Navigation","AuthenticationLayout","props","components_GuestHeader","particles_default","params","particles","line_linked","shadow","blur","color","enable","minHeight","position","zIndex","top","backgroundColor","children","GlobalRouteSignInForm","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","console","log","getFieldDecorator","this","es_form","onSubmit","rules","required","message","input","prefix","icon","type","placeholder","valuePropName","initialValue","es_checkbox","href","es_button","htmlType","React","Component","WrappedGlobalRouteSignInForm","Form","create","SignIn","layouts_AuthenticationLayout","SignIn_SignInForm","CREATE_USER","gql","_templateObject","SEND_ACCOUNT_CONFIRMATION_EMAIL","sendAccountConfirmationEmail_templateObject","RegisterFormAgreement","visible","onClose","drawer","title","placement","closable","Option","Select","RegisterForm","state","confirmDirty","autoCompleteResult","agreementVisible","agree","resendEmailButtonVisible","validateFieldsAndScroll","createUser","variables","email","password","confirmedPassword","confirm","phone","then","res","history","push","pathname","id","catch","setState","handleConfirmBlur","value","target","compareToFirstPassword","callback","getFieldValue","validateToNextPassword","force","toggleAgreementDrawer","setFieldsValue","agreement","prevState","onResendEmailConfirmation","prefixSelector","es_select","width","Fragment","label","validator","onBlur","whitespace","tooltip","addonBefore","cb","Boolean","onClick","loading","RegisterForm_RegisterFormAgreement","WrappedRegisterForm","withRouter","RegisterMarketing","Register","react_apollo_browser_umd","mutation","error","Register_RegisterMarketing","Register_RegisterForm","graphql","mutate","userId","location","sendAccountConfirmationEmail","success","useEffect","xmlns","viewBox","strokeLinecap","strokeLinejoin","strokeMiterlimit","cx","cy","r","points","GuestLayout","Blog","layouts_GuestLayout","LandingAnimatedCloud","Landing","Landing_LandingAnimatedCloud","disabled","size","AppRouter","BrowserRouter","Route","exact","path","component","CreateAccountSuccess","InMemoryCache","errorLink","onError","graphQLErrors","stateLink","withClientState","defaults","client","ApolloClient","from","authLink","App","routes","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4008bf3c.chunk.js","sourcesContent":["import { ApolloLink } from \"apollo-link\";\nimport { createHttpLink } from \"apollo-link-http\";\n\nconst httpLink = createHttpLink({\n  uri: process.env.REACT_APP_SERVER_HOST || \"http://localhost:4000/\"\n});\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  operation.setContext({\n    headers: {\n      authorization: localStorage.getItem(\"token\") || null\n    }\n  });\n  return forward(operation);\n});\n\n// use with apollo-client\nconst link = middlewareLink.concat(httpLink);\n\nexport default link;\n","const defaultStates = {\n  currentUser: {\n    __typename: \"currentUser\",\n    authSuccess: false,\n    role: \"\",\n    token: \"\"\n  }\n};\n\nexport default defaultStates;","const resolvers = {\n  Mutation: {\n    updateCurrentUser: (_, { role, token }, { cache }) => {\n      const data = {\n        currentUser: {\n          __typename: \"currentUser\",\n          authSuccess: true,\n          role,\n          token\n        }\n      };\n\n      cache.writeQuery({ data });\n      return null;\n    }\n  }\n};\n\nexport default resolvers;","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport \"./GuestHeaderLogo.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst GuestHeaderLogo = ({ textLogoHidden }) => (\n  <div className=\"GuestHeaderLogo\">\n    <Link className=\"text-decoration-none\" to=\"/\">\n      <img src=\"/logo.png\" alt=\"Logo\" />\n      <h2 className={`d-none ${textLogoHidden ? \"d-md-none\" : \"d-md-block\"}`}>\n        <span className=\"at\">@</span> School\n      </h2>\n    </Link>\n  </div>\n);\n\nGuestHeaderLogo.defaultProps = {\n  textLogoHidden: false\n};\n\nGuestHeaderLogo.propTypes = {\n  textLogoHidden: PropTypes.bool\n};\n\nexport default GuestHeaderLogo;\n","import { Menu } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Navigation = ({ menu }) => (\n  <Menu\n    theme=\"light\"\n    mode=\"horizontal\"\n    selectedKeys={[\"-1\"]}\n    style={{ lineHeight: \"64px\" }}\n  >\n    {menu.map((item, key) => (\n      <Menu.Item key={key.toString()}>\n        <Link className=\"text-decoration-none\" to={item.url}>{item.name}</Link>\n      </Menu.Item>\n    ))}\n  </Menu>\n);\n\nNavigation.propTypes = {\n  menu: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string\n    })\n  ).isRequired\n};\n\nexport default Navigation;\n","import { Layout } from \"antd\";\nimport React from \"react\";\nimport \"./GuestHeader.scss\";\nimport GuestHeaderLogo from \"./GuestHeaderLogo\";\nimport Navigation from \"./Navigation\";\nimport PropTypes from \"prop-types\";\n\nconst HeaderGuest = ({ menu, textLogoHidden }) => (\n  <Layout.Header className=\"GuestHeader\">\n    <GuestHeaderLogo textLogoHidden={textLogoHidden} />\n    <Navigation menu={menu} />\n  </Layout.Header>\n);\n\nHeaderGuest.defaultProps = {\n  textLogoHidden: false\n};\n\nHeaderGuest.propTypes = {\n  menu: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string\n    })\n  ).isRequired,\n  textLogoHidden: PropTypes.bool\n};\n\nexport default HeaderGuest;\n","import React from \"react\";\nimport Particles from \"react-particles-js\";\nimport GuestHeader from \"../../components/GuestHeader\";\nimport \"./AuthenticationLayout.scss\";\n\nconst AuthenticationLayout = props => {\n  return (\n    <div className=\"AuthenticationLayout\">\n      <GuestHeader textLogoHidden={true} menu={[]} />\n      <Particles\n        params={{\n          particles: {\n            line_linked: {\n              shadow: {\n                blur: 5,\n                color: \"#3CA9D1\",\n                enable: true\n              }\n            }\n          }\n        }}\n        style={{\n          minHeight: \"100%\",\n          position: \"fixed\",\n          zIndex: \"-1\",\n          top: 0,\n          backgroundColor: \"rgb(248, 248, 248)\"\n        }}\n        className=\"particle-container\"\n      />\n      <div className=\"form-container-wrapper\">\n        <div className=\"form-container\">\n          <h1>@ SCHOOL</h1>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthenticationLayout;\n","import { Button, Checkbox, Form, Icon, Input } from \"antd\";\nimport React from \"react\";\nimport \"./SignInForm.scss\";\n\nclass GlobalRouteSignInForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit} className=\"SignInForm\">\n          <Form.Item>\n            {getFieldDecorator(\"userName\", {\n              rules: [\n                { required: true, message: \"Please input your username!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"Username\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [\n                { required: true, message: \"Please input your Password!\" }\n              ]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <div className=\"remember-me-forgot-pw\">\n              {getFieldDecorator(\"remember\", {\n                valuePropName: \"checked\",\n                initialValue: true\n              })(<Checkbox>Remember me</Checkbox>)}\n              <a className=\"login-form-forgot\" href=\"/\">\n                Forgot password\n              </a>\n            </div>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Sign In\n            </Button>\n            <div>\n              Or <a href=\"/register\">register now!</a>\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst WrappedGlobalRouteSignInForm = Form.create({ name: \"normal_login\" })(\n  GlobalRouteSignInForm\n);\n\nexport default WrappedGlobalRouteSignInForm;\n","import React from \"react\";\nimport AuthenticationLayout from \"../../../layouts/AuthenticationLayout\";\nimport SignInForm from \"./SignInForm\";\n\nconst SignIn = () => {\n  return (\n    <AuthenticationLayout>\n      <SignInForm />\n    </AuthenticationLayout>\n  );\n};\n\nexport default SignIn;\n","import gql from \"graphql-tag\";\n\nconst CREATE_USER = gql`\n  mutation CreateUser(\n    $name: String!\n    $email: String!\n    $password: String!\n    $confirmedPassword: String!\n    $role: String!\n  ) {\n    createUser(\n      name: $name\n      email: $email\n      password: $password\n      confirmedPassword: $confirmedPassword\n      role: $role\n    ) {\n      id\n    }\n  }\n`;\n\nexport default CREATE_USER;\n","import gql from \"graphql-tag\";\n\nconst SEND_ACCOUNT_CONFIRMATION_EMAIL = gql`\n  mutation SendAccountConfirmationEmail($id: ID!) {\n    sendAccountConfirmationEmail(id: $id)\n  }\n`;\n\nexport default SEND_ACCOUNT_CONFIRMATION_EMAIL;\n","import { Drawer } from \"antd\";\nimport React from \"react\";\n\nconst RegisterFormAgreement = ({ visible, onClose }) => {\n  return (\n    <Drawer\n      title=\"Terms and Conditions\"\n      placement=\"right\"\n      closable={true}\n      onClose={onClose}\n      visible={visible}\n    >\n      Welcome to @ School! These terms and conditions outline the rules and\n      regulations for the use of @ School's Website, located at Website.com. By\n      accessing this website we assume you accept these terms and conditions. Do\n      not continue to use @ School if you do not agree to take all of the terms\n      and conditions stated on this page. The following terminology applies to\n      these Terms and Conditions, Privacy Statement and Disclaimer Notice and\n      all Agreements: “Client”, “You” and “Your” refers to you, the person log\n      on this website and compliant to the Company's terms and conditions. “The\n      Company”, “Ourselves”, “We”, “Our” and “Us”, refers to our Company.\n      “Party”, “Parties”, or “Us”, refers to both the Client and ourselves. All\n      terms refer to the offer, acceptance and consideration of payment\n      necessary to undertake the process of our assistance to the Client in the\n      most appropriate manner for the express purpose of meeting the Client's\n      needs in respect of provision of the Company's stated services, in\n      accordance with and subject to, prevailing law of Netherlands. Any use of\n      the above terminology or other words in the singular, plural,\n      capitalization and/or he/she or they, are taken as interchangeable and\n      therefore as referring to same. Cookies We employ the use of cookies. By\n      accessing @ School, you agreed to use cookies in agreement with the @\n      School's Privacy Policy. Most interactive websites use cookies to let us\n      retrieve the user's details for each visit. Cookies are used by our\n      website to enable the functionality of certain areas to make it easier for\n      people visiting our website. Some of our affiliate/advertising partners\n      may also use cookies. License Unless otherwise stated, @ School and/or its\n      licensors own the intellectual property rights for all material on @\n      School. All intellectual property rights are reserved. You may access this\n      from @ School for your own personal use subjected to restrictions set in\n      these terms and conditions. You must not: Republish material from @ School\n      Sell, rent or sub-license material from @ School Reproduce, duplicate or\n      copy material from @ School Redistribute content from @ School This\n      Agreement shall begin on the date hereof. Parts of this website offer an\n      opportunity for users to post and exchange opinions and information in\n      certain areas of the website. @ School does not filter, edit, publish or\n      review Comments prior to their presence on the website. Comments do not\n      reflect the views and opinions of @ School,its agents and/or affiliates.\n      Comments reflect the views and opinions of the person who post their views\n      and opinions. To the extent permitted by applicable laws, @ School shall\n      not be liable for the Comments or for any liability, damages or expenses\n      caused and/or suffered as a result of any use of and/or posting of and/or\n      appearance of the Comments on this website. @ School reserves the right to\n      monitor all Comments and to remove any Comments which can be considered\n      inappropriate, offensive or causes breach of these Terms and Conditions.\n      You warrant and represent that: You are entitled to post the Comments on\n      our website and have all necessary licenses and consents to do so; The\n      Comments do not invade any intellectual property right, including without\n      limitation copyright, patent or trademark of any third party; The Comments\n      do not contain any defamatory, libelous, offensive, indecent or otherwise\n      unlawful material which is an invasion of privacy The Comments will not be\n      used to solicit or promote business or custom or present commercial\n      activities or unlawful activity. You hereby grant @ School a non-exclusive\n      license to use, reproduce, edit and authorize others to use, reproduce and\n      edit any of your Comments in any and all forms, formats or media.\n      Hyperlinking to our Content The following organizations may link to our\n      Website without prior written approval: Government agencies; Search\n      engines; News organizations; Online directory distributors may link to our\n      Website in the same manner as they hyperlink to the Websites of other\n      listed businesses; and System wide Accredited Businesses except soliciting\n      non-profit organizations, charity shopping malls, and charity fundraising\n      groups which may not hyperlink to our Web site. These organizations may\n      link to our home page, to publications or to other Website information so\n      long as the link: (a) is not in any way deceptive; (b) does not falsely\n      imply sponsorship, endorsement or approval of the linking party and its\n      products and/or services; and (c) fits within the context of the linking\n      party's site. We may consider and approve other link requests from the\n      following types of organizations: commonly-known consumer and/or business\n      information sources; dot.com community sites; associations or other groups\n      representing charities; online directory distributors; internet portals;\n      accounting, law and consulting firms; and educational institutions and\n      trade associations. We will approve link requests from these organizations\n      if we decide that: (a) the link would not make us look unfavorably to\n      ourselves or to our accredited businesses; (b) the organization does not\n      have any negative records with us; (c) the benefit to us from the\n      visibility of the hyperlink compensates the absence of @ School; and (d)\n      the link is in the context of general resource information. These\n      organizations may link to our home page so long as the link: (a) is not in\n      any way deceptive; (b) does not falsely imply sponsorship, endorsement or\n      approval of the linking party and its products or services; and (c) fits\n      within the context of the linking party's site. If you are one of the\n      organizations listed in paragraph 2 above and are interested in linking to\n      our website, you must inform us by sending an e-mail to @ School. Please\n      include your name, your organization name, contact information as well as\n      the URL of your site, a list of any URLs from which you intend to link to\n      our Website, and a list of the URLs on our site to which you would like to\n      link. Wait 2-3 weeks for a response. Approved organizations may hyperlink\n      to our Website as follows: By use of our corporate name; or By use of the\n      uniform resource locator being linked to; or By use of any other\n      description of our Website being linked to that makes sense within the\n      context and format of content on the linking party's site. No use of @\n      School's logo or other artwork will be allowed for linking absent a\n      trademark license agreement. iFrames Without prior approval and written\n      permission, you may not create frames around our Webpages that alter in\n      any way the visual presentation or appearance of our Website. Content\n      Liability We shall not be hold responsible for any content that appears on\n      your Website. You agree to protect and defend us against all claims that\n      is rising on your Website. No link(s) should appear on any Website that\n      may be interpreted as libelous, obscene or criminal, or which infringes,\n      otherwise violates, or advocates the infringement or other violation of,\n      any third party rights. Reservation of Rights We reserve the right to\n      request that you remove all links or any particular link to our Website.\n      You approve to immediately remove all links to our Website upon request.\n      We also reserve the right to amen these terms and conditions and it's\n      linking policy at any time. By continuously linking to our Website, you\n      agree to be bound to and follow these linking terms and conditions.\n      Removal of links from our website If you find any link on our Website that\n      is offensive for any reason, you are free to contact and inform us any\n      moment. We will consider requests to remove links but we are not obligated\n      to or so or to respond to you directly. We do not ensure that the\n      information on this website is correct, we do not warrant its completeness\n      or accuracy; nor do we promise to ensure that the website remains\n      available or that the material on the website is kept up to date.\n      Disclaimer To the maximum extent permitted by applicable law, we exclude\n      all representations, warranties and conditions relating to our website and\n      the use of this website. Nothing in this disclaimer will: limit or exclude\n      our or your liability for death or personal injury; limit or exclude our\n      or your liability for fraud or fraudulent misrepresentation; limit any of\n      our or your liabilities in any way that is not permitted under applicable\n      law; or exclude any of our or your liabilities that may not be excluded\n      under applicable law. The limitations and prohibitions of liability set in\n      this Section and elsewhere in this disclaimer: (a) are subject to the\n      preceding paragraph; and (b) govern all liabilities arising under the\n      disclaimer, including liabilities arising in contract, in tort and for\n      breach of statutory duty. As long as the website and the information and\n      services on the website are provided free of charge, we will not be liable\n      for any loss or damage of any nature.\n    </Drawer>\n  );\n};\n\nexport default RegisterFormAgreement;\n","import { Button, Checkbox, Form, Icon, Input, Select, Tooltip } from \"antd\";\nimport React from \"react\";\nimport \"./RegisterForm.scss\";\nimport RegisterFormAgreement from \"./RegisterFormAgreement\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { Option } = Select;\n\nclass RegisterForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n    agreementVisible: false,\n    agree: false,\n    resendEmailButtonVisible: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(values);\n        this.props\n          .createUser({\n            variables: {\n              name: values.name,\n              email: values.email,\n              password: values.password,\n              confirmedPassword: values.confirm,\n              phone: values.phone,\n              role: \"3\"\n            }\n          })\n          .then(res => {\n            console.log(res);\n            this.props.history.push({\n              pathname: \"/create-account-success\",\n              state: {\n                id: res.data.createUser.id\n              }\n            });\n          })\n          .catch(err => console.log(err));\n        console.log(\"Received values of form: \", values);\n        // do something to the server\n        this.setState({ resendEmailButtonVisible: true });\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (_, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"Two passwords that you enter is inconsistent!\");\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (_, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true });\n    }\n    callback();\n  };\n\n  toggleAgreementDrawer = () => {\n    if (!this.state.agreementVisible) {\n      this.props.form.setFieldsValue({\n        agreement: !this.props.form.getFieldValue(\"agreement\")\n      });\n    }\n    this.setState(prevState => ({\n      agreementVisible: !prevState.agreementVisible\n    }));\n  };\n\n  onResendEmailConfirmation = () => {\n    console.log(\"Here\");\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const prefixSelector = getFieldDecorator(\"prefix\", {\n      initialValue: \"61\"\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"61\">+61</Option>\n        <Option value=\"64\">+64</Option>\n      </Select>\n    );\n\n    return (\n      <React.Fragment>\n        <Form\n          layout=\"vertical\"\n          onSubmit={this.handleSubmit}\n          className=\"RegisterForm\"\n        >\n          <Form.Item label=\"E-mail\">\n            {getFieldDecorator(\"email\", {\n              rules: [\n                {\n                  type: \"email\",\n                  message: \"The input is not valid E-mail!\"\n                },\n                {\n                  required: true,\n                  message: \"Please input your E-mail!\"\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Password\">\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your password!\"\n                },\n                {\n                  validator: this.validateToNextPassword\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <Form.Item label=\"Confirm Password\">\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please confirm your password!\"\n                },\n                {\n                  validator: this.compareToFirstPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n          <Form.Item label=\"Name\">\n            {getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your name!\",\n                  whitespace: true\n                }\n              ]\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item\n            label={\n              <span>\n                Nickname&nbsp;\n                <Tooltip title=\"What do you want others to call you?\">\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </span>\n            }\n          >\n            {getFieldDecorator(\"nickname\")(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Phone Number\">\n            {getFieldDecorator(\"phone\", {\n              rules: [\n                { required: true, message: \"Please input your phone number!\" }\n              ]\n            })(\n              <Input addonBefore={prefixSelector} style={{ width: \"100%\" }} />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"agreement\", {\n              valuePropName: \"checked\",\n              rules: [\n                {\n                  validator: (_, value, cb) =>\n                    Boolean(value) ? cb() : cb(true),\n                  message: \"You must agree to terms and conditions\"\n                }\n              ]\n            })(\n              <Checkbox>\n                I have read the{\" \"}\n                <span\n                  onClick={this.toggleAgreementDrawer}\n                  className=\"agreement\"\n                >\n                  agreement\n                </span>\n              </Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              loading={this.props.loading}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >\n              Register\n            </Button>\n            <Button\n              className={`ml-2 ${\n                this.state.resendEmailButtonVisible ? \"\" : \"d-none\"\n              }`}\n              type=\"default\"\n              onClick={this.onResendEmailConfirmation}\n            >\n              Resend Email\n            </Button>\n          </Form.Item>\n        </Form>\n        <RegisterFormAgreement\n          onClose={this.toggleAgreementDrawer}\n          visible={this.state.agreementVisible}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst WrappedRegisterForm = Form.create({ name: \"register\" })(\n  withRouter(RegisterForm)\n);\n\nexport default WrappedRegisterForm;\n","import React from \"react\";\nimport \"./RegisterMarketing.scss\";\n\nconst RegisterMarketing = () => {\n  return <div className=\"RegisterMarketing\" />;\n};\n\nexport default RegisterMarketing;\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { CREATE_USER } from \"../../../graphql/mutations\";\nimport AuthenticationLayout from \"../../../layouts/AuthenticationLayout\";\nimport \"./Register.scss\";\nimport RegisterForm from \"./RegisterForm\";\nimport RegisterMarketing from \"./RegisterMarketing\";\nimport { message } from \"antd\";\n\nconst Register = () => {\n  return (\n    <AuthenticationLayout>\n      <Mutation mutation={CREATE_USER}>\n        {(createUser, { data, loading, error }) => {\n          if (error) {\n            message.error(\"Failed to fetch data.\");\n          }\n          return (\n            <div>\n              <div className=\"Register\">\n                <RegisterMarketing />\n                <RegisterForm\n                  createUser={createUser}\n                  data={data}\n                  loading={loading}\n                />\n              </div>\n            </div>\n          );\n        }}\n      </Mutation>\n    </AuthenticationLayout>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from \"react\";\nimport \"./CreateAccountSuccess.scss\";\nimport AuthenticationLayout from \"../../../layouts/AuthenticationLayout\";\nimport { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { message } from \"antd\";\nimport { SEND_ACCOUNT_CONFIRMATION_EMAIL } from \"../../../graphql/mutations\";\nimport { graphql } from \"react-apollo\";\n\nconst CreateAccountSuccess = ({ history, mutate }) => {\n  const userId = history.location.state.id;\n  if (!userId) {\n    message.error(\"Invalid Request\");\n    history.push(\"/\");\n  }\n\n  const sendAccountConfirmationEmail = () => {\n    mutate({\n      variables: {\n        id: userId\n      }\n    })\n      .then(() => message.success(\"Sent email confirmation succesfully.\"))\n      .catch(() => message.error(\"Failed to fetch.\"));\n  };\n\n  useEffect(() => {\n    sendAccountConfirmationEmail();\n  }, []);\n  return (\n    <AuthenticationLayout>\n      <div className=\"container text-center\">\n        <h4>Account Registration Success</h4>\n        <hr />\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"svg-success\"\n          viewBox=\"0 0 24 24\"\n        >\n          <g strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\">\n            <circle\n              className=\"success-circle-outline\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"11.5\"\n            />\n            <circle className=\"success-circle-fill\" cx=\"12\" cy=\"12\" r=\"11.5\" />\n            <polyline className=\"success-tick\" points=\"17,8.5 9.5,15.5 7,13\" />\n          </g>\n        </svg>\n        <hr />\n      </div>\n      <div className=\"text-center mb-3\">\n        <Button onClick={sendAccountConfirmationEmail} type=\"primary\">\n          Resend Email\n        </Button>\n      </div>\n      <div className=\"text-center\">\n        <Link to=\"/signin\">Continue</Link>\n      </div>\n    </AuthenticationLayout>\n  );\n};\n\nexport default graphql(SEND_ACCOUNT_CONFIRMATION_EMAIL)(\n  withRouter(CreateAccountSuccess)\n);\n","import React from \"react\";\nimport GuestHeader from \"../../components/GuestHeader\";\nimport PropTypes from \"prop-types\";\n\nconst GuestLayout = props => {\n  return (\n    <React.Fragment>\n      <GuestHeader menu={props.menu} />\n      {props.children}\n    </React.Fragment>\n  );\n};\n\nGuestLayout.propTypes = {\n  menu: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      url: PropTypes.string\n    })\n  ).isRequired\n};\n\nexport default GuestLayout;\n","import { Icon } from \"antd\";\nimport React from \"react\";\nimport GuestLayout from \"../../layouts/GuestLayout\";\nimport \"./Blog.scss\";\n\nconst Blog = () => {\n  return (\n    <GuestLayout\n      menu={[\n        { name: \"Sign In\", url: \"/signin\" },\n        { name: \"Register\", url: \"/register\" }\n      ]}\n    >\n      <div className=\"Blog\">\n        <div className=\"SearchInput\">\n          <Icon type=\"search\" />\n          <input />\n        </div>\n      </div>\n    </GuestLayout>\n  );\n};\n\nexport default Blog;\n","import React from \"react\";\nimport \"./LandingAnimatedCloud.scss\";\n\nconst LandingAnimatedCloud = props => {\n  return (\n    <div className=\"LandingAnimatedCloud\">\n      <div className=\"main-intro\">{props.children}</div>\n      <div className=\"background-wrap\">\n        <div className=\"x1\">\n          <div className=\"cloud\" />\n        </div>\n        <div className=\"x2\">\n          <div className=\"cloud\" />\n        </div>\n        <div className=\"x3\">\n          <div className=\"cloud\" />\n        </div>\n        <div className=\"x4\">\n          <div className=\"cloud\" />\n        </div>\n        <div className=\"x5\">\n          <div className=\"cloud\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingAnimatedCloud;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport GuestLayout from \"../../layouts/GuestLayout\";\nimport LandingAnimatedCloud from \"./LandingAnimatedCloud\";\nimport \"./Landing.scss\";\n\nconst Landing = () => {\n  return (\n    <GuestLayout\n      menu={[\n        { name: \"Sign In\", url: \"/signin\" },\n        { name: \"Register\", url: \"/register\" },\n        { name: \"Blog\", url: \"/blog\" }\n      ]}\n    >\n      <div className=\"Landing\">\n        <LandingAnimatedCloud>\n          <div className=\"main-intro-title\">\n            The school that is on the cloud\n          </div>\n          <Button disabled={true} size=\"large\">\n            Discover more\n          </Button>\n        </LandingAnimatedCloud>\n      </div>\n    </GuestLayout>\n  );\n};\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { CreateAccountSuccess, Register, SignIn } from \"./Authentication\";\nimport Blog from \"./Blog\";\nimport Landing from \"./Landing\";\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/create-account-success\" component={CreateAccountSuccess} />\n        </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default AppRouter;\n","import \"ant-design-pro/dist/ant-design-pro.css\";\nimport \"antd/dist/antd.css\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport ApolloClient from \"apollo-client\";\nimport { ApolloLink } from \"apollo-link\";\nimport { onError } from \"apollo-link-error\";\nimport { withClientState } from \"apollo-link-state\";\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport authLink from \"./apollo/auth\";\nimport defaultStates from \"./apollo/defaultStates\";\nimport resolvers from \"./apollo/resolvers\";\nimport \"./App.scss\";\nimport AppRouter from \"./routes\";\n\nconst cache = new InMemoryCache();\n\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message));\n});\n\nconst stateLink = withClientState({\n  cache,\n  defaults: defaultStates,\n  resolvers\n});\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([errorLink, stateLink, authLink]),\n  cache\n});\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <AppRouter />\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}